C251 COMPILER V5.60.0,  control                                                            13/12/23  20:03:27  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE control
OBJECT MODULE PLACED IN .\Out_File\control.obj
COMPILER INVOKED BY: E:\NIEZS\ARM\KeilC251\C251\BIN\C251.EXE ..\CODE\control.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDI
                    -R(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;.
                    -.\USER\src) DEBUG PRINT(.\Out_File\control.lst) TABS(2) OBJECT(.\Out_File\control.obj) 

stmt  level    source

    1          /**
    2            ******************************************************************************
    3            * @author  Pump_Li
    4            * @version V1.0.0
    5            * @date    2023.3.27
    6            * @brief   差速串级pid控制
    7            ******************************************************************************
    8            * @attention
    9            * 
   10            ******************************************************************************
   11            */
   12           /* Includes ------------------------------------------------------------------*/
   13          #include "headfile.h"
   14          /* Private Define ------------------------------------------------------------*/
   15          float speed_output=0;
   16          float Position_Get,Position_pre_Get;
   17          uint8 COUNTS=0;     //内外环计数器
   18          float target_vel_z=0;  //目标角度
   19          float target_vel_z_pre=0;
   20          float my_gyro_z;
   21          float ZX_kp=0.0;    //转向环PID（内环）
   22          float ZX_ki=0.0;//float ZX_ki=0.0032;
   23          float ZX_kd=0;
   24          float Kp_angel_out;//float Kp_angel_out=90;
   25          float Ki_angel_out=0;
   26          float Kd_angel_out=10;       //外环pid
   27          float price_Velocite=0;  //转向输出差速
   28          uint8 stop_flag=0;
   29          /* Private Functions ---------------------------------------------------------*/
   30          
   31          /* Functions -----------------------------------------------------------------*/
   32          /**
   33            * @brief  电机差速控制
   34            * @param  float speed
   35            * @retval None
   36            */
   37          void motor_speed(float speed)
   38          {
   39   1      //  left_motor_pid(speed+price_Velocite);
   40   1      //  right_motor_pid(speed-price_Velocite);
   41   1        left_motor_pid(speed);
   42   1        right_motor_pid(speed);
   43   1      }
   44          /**
   45            * @brief  速度输出，反二次型
   46            * @param  float a,b
   47            * @retval None
   48            */
   49          void set_speed_target(float a,float b)
   50          {
   51   1        Position_Get = Cha_BI_He(Left_Xie_Adc,Right_Xie_Adc);
   52   1        speed_output = -a*Position_Get*Position_Get + b;
   53   1        Kp_angel_out = 800*Position_Get*Position_Get + 130;//70,20
   54   1        K_diff =0.5*target_vel_z*0.2*(2*3.1415926/360);
   55   1        if(K_diff<=speed_output && K_diff>=(-speed_output))K_diff = K_diff;
*** WARNING C138 IN LINE 55 OF ..\CODE\control.c: expression with possibly no effect
   56   1        else K_diff=0;
C251 COMPILER V5.60.0,  control                                                            13/12/23  20:03:27  PAGE 2   

   57   1        motor_speed(speed_output);
   58   1      }
   59          /**
   60            * @brief  None
   61            * @param  None
   62            * @retval None
   63            */
   64          void DifferControl(){
   65   1      //转向外环50ms,转向内环10ms
   66   1        //三次内环，执行一次内环
   67   1      //  if(COUNTS==5){
   68   1      //    COUNTS=0;
   69   1          DerectError_Get();
   70   1      //  }
   71   1      //  COUNTS++;
   72   1        my_gyro_z = imu660ra_gyro_transition(imu660ra_gyro_z);
   73   1        if(my_gyro_z<5 && my_gyro_z>(-5))
   74   1          my_gyro_z = 0;    //陀螺仪死区
   75   1        //target_vel_z=target_vel_z_pre+(target_vel_z-target_vel_z_pre)*COUNTS/5;
   76   1        //Direction_out();
   77   1      }
   78          
   79          void DerectError_Get(void)  //外环
   80          { 
   81   1          //target_vel_z=Kp_angel_out*Position_Get+Kd_angel_out*(Position_Get-Position_pre_Get);
   82   1          target_vel_z=Kp_angel_out*Position_Get+my_gyro_z;//陀螺仪
   83   1         //target_vel_z=20; //开启这句话，表转向环只有内环，外环输出为0
   84   1           Position_pre_Get=Position_Get;
   85   1           target_vel_z_pre=target_vel_z;
   86   1      }
   87          
   88          /**
   89            * @brief  角速度内环，串级
   90            * @param  None
   91            * @retval None
   92            */
   93          void Direction_out(void)
   94          {
   95   1        float error;
   96   1        static  float last_error;
   97   1        float price_Differention;
   98   1        float price_Intergration;
   99   1        float price_Proportion;
  100   1        static float Pre1_Error[4];
  101   1        float Direct_Parameter;
  102   1        static float sum;
  103   1        /*直线环，如果左摇右摆调内环KP、KD*/
  104   1        error = target_vel_z-my_gyro_z;  
  105   1        //转向PID控制
  106   1        sum = error++;
  107   1        price_Proportion=ZX_kp * error;
  108   1        price_Intergration=ZX_ki * sum;
  109   1        price_Differention= ZX_kd* (error - last_error);
  110   1        
  111   1        Direct_Parameter =price_Proportion  + price_Differention + price_Intergration;
  112   1        
  113   1        last_error =  error; 
  114   1        Pre1_Error[3]=Pre1_Error[2];
  115   1        Pre1_Error[2]=Pre1_Error[1];
  116   1        Pre1_Error[1]=Pre1_Error[0];
  117   1        Pre1_Error[0]=Direct_Parameter;
  118   1        Direct_Parameter=Pre1_Error[0]*0.8+Pre1_Error[1]*0.1+Pre1_Error[2]*0.06+Pre1_Error[3]*0.04 ;
  119   1        price_Velocite= - Direct_Parameter;
  120   1        //转向差速速度限制幅度
  121   1       if(price_Velocite>=1) price_Velocite=1;
  122   1        if(price_Velocite<=-1) price_Velocite=-1;
C251 COMPILER V5.60.0,  control                                                            13/12/23  20:03:27  PAGE 3   

  123   1       
  124   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       473     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        78          4
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        82     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
